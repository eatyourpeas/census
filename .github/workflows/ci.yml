name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/census
      DJANGO_SETTINGS_MODULE: census_app.settings
      PYTHONWARNINGS: default
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: census
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 5 \
          --health-start-period 20s
    steps:
      - uses: actions/checkout@v4
      - id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Wait for PostgreSQL to be ready
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          for i in {1..60}; do
            if pg_isready -h postgres -p 5432 -U postgres; then
              echo "Postgres is ready"; break;
            fi
            echo "Waiting for Postgres... ($i)"; sleep 2;
          done
      - name: Cache Poetry virtualenvs
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-
      - name: Install Poetry
        run: pip install poetry==1.8.3
      - name: Install dependencies
        run: poetry install
      - name: Lint
        run: poetry run ruff check .
      - name: Django checks
        run: poetry run python manage.py check
      - name: Run migrations
        run: |
          poetry run python manage.py migrate --noinput
      - name: Run tests
        run: |
          poetry run pytest -q
